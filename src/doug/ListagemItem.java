/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package doug;

/**
 *
 * @author Douglas
 */
import java.sql.*;

import javax.swing.JOptionPane;


public class ListagemItem extends javax.swing.JFrame {

    /**
     * Creates new form RegistroItemGasto
     */
    
    private String[] args;
   
    private static javax.swing.JTextField jtxtReturn, jtxtColumn, jtxtCodGasto, jtxtCodCat;
    
    private static javax.swing.table.DefaultTableModel dtm ;

    private static String temp = "";
    
    private static String titulo;
    
    
    public ListagemItem() {
        initComponents();
        
        this.setExtendedState(MAXIMIZED_BOTH);
        
        new Funcoes().executeTimer(jtxtDataHora, "dd/MM/yyyy hh:mm:ss");
        
        
    }
    
    private static void tabela(){ // Constrói a tabela com base nas restrições pedidas.
        
            if( (new Funcoes().getTipoUsuario(jtxtUsuario.getText()).toString().compareTo("administrador") == 0) ||
                    (new Funcoes().getTipoUsuario(jtxtUsuario.getText()).toString().compareTo("root") == 0) )
                
                    preenche("org.gjt.mm.mysql.Driver","jdbc:mysql://localhost/gastos", "root", "","Select * from item Order by codigoGasto asc" ) ; // Preenche a tabela.
            
            else
                
            {
            
                String[][] parametro = new String[1][2];
                
                parametro[0][0] = "String";
                
                parametro[0][1] = jtxtUsuario.getText();
               
                
                preenche("org.gjt.mm.mysql.Driver","jdbc:mysql://localhost/gastos", "root", "",
                        
                            "select item.codigoGasto, item.codigoCatalogo, item.quantidade, item.total "
                            + "from item, gasto "
                            + "where ( (gasto.codigoPessoa = " + new Funcoes().retornar("SELECT codigoPessoa FROM login WHERE usuario = ? ", "codigoPessoa", parametro)
                        
                            +           ") and (gasto.codigo = item.codigoGasto))" +
                            
                        
                        
                                "Order by item.codigoGasto asc" ) ; 

                /* Preenche a tabela. */
            
                
                
            }
            
            
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jspFundo = new javax.swing.JScrollPane();
        jpBase = new javax.swing.JPanel();
        jspSaida = new javax.swing.JScrollPane();
        jtItens = new javax.swing.JTable();
        jtxtUsuario = new javax.swing.JTextField();
        jtxtDataHora = new javax.swing.JTextField();
        jmbMenu = new javax.swing.JMenuBar();
        jmPrincipal = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registro de Ítem de gasto");
        setForeground(java.awt.Color.magenta);
        setName("jfRegistroItem"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jspFundo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 51, 0), 5));

        jspSaida.setBackground(new java.awt.Color(0, 102, 102));
        jspSaida.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 51), 5));
        jspSaida.setForeground(new java.awt.Color(255, 255, 255));

        jtItens.setBackground(new java.awt.Color(0, 255, 153));
        jtItens.setFont(new java.awt.Font("Tahoma", 3, 48)); // NOI18N
        jtItens.setForeground(new java.awt.Color(0, 204, 51));
        jtItens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtItens.setCellSelectionEnabled(true);
        jtItens.setRowHeight(60);
        jtItens.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtItensMousePressed(evt);
            }
        });
        jspSaida.setViewportView(jtItens);
        jtItens.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jtxtUsuario.setEditable(false);
        jtxtUsuario.setBackground(new java.awt.Color(0, 255, 153));
        jtxtUsuario.setFont(new java.awt.Font("Tahoma", 3, 48)); // NOI18N
        jtxtUsuario.setForeground(new java.awt.Color(0, 204, 51));
        jtxtUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 51, 0), 5, true), "Usuário", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 48), new java.awt.Color(153, 0, 51))); // NOI18N

        jtxtDataHora.setEditable(false);
        jtxtDataHora.setBackground(new java.awt.Color(0, 255, 153));
        jtxtDataHora.setFont(new java.awt.Font("Tahoma", 3, 48)); // NOI18N
        jtxtDataHora.setForeground(new java.awt.Color(0, 204, 51));
        jtxtDataHora.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 51, 0), 5, true), "Data e Hora", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 48), new java.awt.Color(153, 0, 51))); // NOI18N

        javax.swing.GroupLayout jpBaseLayout = new javax.swing.GroupLayout(jpBase);
        jpBase.setLayout(jpBaseLayout);
        jpBaseLayout.setHorizontalGroup(
            jpBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBaseLayout.createSequentialGroup()
                .addGroup(jpBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpBaseLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jtxtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 1143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpBaseLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jtxtDataHora, javax.swing.GroupLayout.PREFERRED_SIZE, 1143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(59, Short.MAX_VALUE))
            .addGroup(jpBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jpBaseLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jspSaida)
                    .addContainerGap()))
        );
        jpBaseLayout.setVerticalGroup(
            jpBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBaseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtxtDataHora, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 534, Short.MAX_VALUE)
                .addComponent(jtxtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(jpBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jpBaseLayout.createSequentialGroup()
                    .addGap(158, 158, 158)
                    .addComponent(jspSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(261, Short.MAX_VALUE)))
        );

        jspFundo.setViewportView(jpBase);

        jmbMenu.setBackground(new java.awt.Color(153, 255, 51));
        jmbMenu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 10));
        jmbMenu.setForeground(new java.awt.Color(102, 102, 255));
        jmbMenu.setFont(new java.awt.Font("Tahoma", 3, 48)); // NOI18N

        jmPrincipal.setBackground(new java.awt.Color(204, 0, 51));
        jmPrincipal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 102), 5));
        jmPrincipal.setForeground(new java.awt.Color(153, 153, 0));
        jmPrincipal.setText("Menu Principal");
        jmPrincipal.setFont(new java.awt.Font("Tahoma", 3, 48)); // NOI18N
        jmPrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jmPrincipalMouseClicked(evt);
            }
        });
        jmbMenu.add(jmPrincipal);

        setJMenuBar(jmbMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspFundo, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspFundo, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmPrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmPrincipalMouseClicked
        // Vai para o menu principal e fecha o frame atual.

        MenuPrincipal.main(args,jtxtUsuario.getText());

        ListagemItem.this.dispose();

    }//GEN-LAST:event_jmPrincipalMouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // Troca o nome do frame.
        
        this.setTitle(titulo);
        
    }//GEN-LAST:event_formWindowActivated

    private void jtItensMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtItensMousePressed
         // Retornar um dado valor.
       
        dtm =  (javax.swing.table.DefaultTableModel)jtItens.getModel();
        
        switch(temp){
                
                case "Alteração de dados":{
                    
                    if((jtItens.getSelectedColumn() == 2) || (jtItens.getSelectedColumn() == 3) ) {
                    
                        JOptionPane.showMessageDialog(null,"Valor na coluna selecionada: " + dtm.getValueAt(jtItens.getSelectedRow() ,jtItens.getSelectedColumn()).toString() + "." , "System Message", JOptionPane.INFORMATION_MESSAGE);
                
                        jtxtReturn.setText(dtm.getValueAt(jtItens.getSelectedRow() ,jtItens.getSelectedColumn()).toString());
                
                        String nomeColuna = dtm.getColumnName(jtItens.getSelectedColumn());
                            
                        JOptionPane.showMessageDialog(null,"Nome da coluna selecionada: " + nomeColuna + "." , "System Message", JOptionPane.INFORMATION_MESSAGE);
               
                        jtxtColumn.setText(nomeColuna);
                        
                        jtxtCodCat.setText(dtm.getValueAt(jtItens.getSelectedRow() ,1).toString());
                    
                        jtxtCodGasto.setText(dtm.getValueAt(jtItens.getSelectedRow() ,0).toString());
                    
                    }
                    
                    else
                        
                        JOptionPane.showMessageDialog(null," Não selecionou uma quantidade válida ou um valor unitário x quantidade (total) válido.", "System Message", JOptionPane.INFORMATION_MESSAGE);
                
                    break;
                    
                }
                
                case "Retorno de código": {
                    
                    if(jtItens.getSelectedColumn() ==  0) {
                    
                            JOptionPane.showMessageDialog(null,"Valor na coluna selecionada: " + dtm.getValueAt(jtItens.getSelectedRow() ,0).toString() + "." , "System Message", JOptionPane.INFORMATION_MESSAGE);
                
                            jtxtReturn.setText(dtm.getValueAt(jtItens.getSelectedRow() ,0).toString());
                            
                            jtxtCodCat.setText(dtm.getValueAt(jtItens.getSelectedRow() ,1).toString());
                            
                            
                    
                    }
                
                    else
                    
                        JOptionPane.showMessageDialog(null," Não selecionou a coluna do código.", "System Message", JOptionPane.INFORMATION_MESSAGE);
                
                    break;
                    
                }
                
                default:{
                    
                    JOptionPane.showMessageDialog(null,"Valor na coluna selecionada: " + dtm.getValueAt(jtItens.getSelectedRow() ,jtItens.getSelectedColumn()).toString() + "." , "System Message", JOptionPane.INFORMATION_MESSAGE);
            
                    JOptionPane.showMessageDialog(null,"Nome da coluna selecionada: " + dtm.getColumnName(jtItens.getSelectedColumn()) + "." , "System Message", JOptionPane.INFORMATION_MESSAGE);
                    
                    break;
                    
                    
                }
                
            }
        
            if( (temp.compareTo("Alteração de dados") == 0) || (temp.compareTo("Retorno de código") == 0) )
        
                dispose();
        
    }//GEN-LAST:event_jtItensMousePressed

    /**
     * @param args the command line arguments
     */
    
   private static void preenche (String driver, String url, String user, String password, String query){
     // Preenche a tabela.
     
        
        Connection conn = null;
    
        Statement st = null;
          
         
          
        jtItens.setModel(new javax.swing.table.DefaultTableModel(
                         new Object [][] { }, new String [] {
       
                         "Código ","Código do produto/serviço obtido", "Quantidade comprada", "Preço x produto/serviço em reais"   //Aqui do nome as colunas da tabela de saída.   
                         }
        ));
          
         
        try
               
        {
                
                Class.forName(driver);
                
                conn = DriverManager.getConnection(url, user, password);
       
                // Our SQL SELECT query. 
                
                // If you only need a few columns, specify them by name instead of using "*".
                                                                                                                                            
                // Create the java statement.
                
                st = conn.createStatement();
       
                // Execute the query, and get a java resultset.
               
                ResultSet rs = st.executeQuery(query);
                
                
               // Iterate through the java resultset.
                
                while (rs.next())
                   
                {                                  
                   
                    javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel)jtItens.getModel();

                    dtm.addRow(new Object[]{rs.getDouble("codigoGasto"),rs.getDouble("codigoCatalogo"),rs.getDouble("quantidade"), 
                                rs.getDouble("total")});
                   
                     
                }
             
                st.close();
                
                conn.close();
                
            }
           
            catch (Exception e)
                
            {
                
                System.err.println("Got an exception! ");
                 
                System.err.println(e.getMessage());
                
                 
            }

                      
    }
   
   
    
    public static void main(String args[], javax.swing.JTextField txtRet,  javax.swing.JTextField txtColuna, javax.swing.JTextField txtCG, javax.swing.JTextField txtCCat, String ret, boolean ligar, String caption, String user ) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListagemItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListagemItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListagemItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListagemItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListagemItem().setVisible(true);
                
               
                jtxtReturn  = txtRet;
                
                jmPrincipal.setVisible(ligar);
                
                jtxtColumn = txtColuna;
                
                jtxtCodGasto = txtCG;
                
                jtxtCodCat = txtCCat;
                
                temp = ret;
                
                titulo = caption;
                
                jtxtUsuario.setText(user);
                
                tabela();
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JMenu jmPrincipal;
    private javax.swing.JMenuBar jmbMenu;
    private javax.swing.JPanel jpBase;
    private javax.swing.JScrollPane jspFundo;
    private javax.swing.JScrollPane jspSaida;
    private static javax.swing.JTable jtItens;
    private static javax.swing.JTextField jtxtDataHora;
    private static javax.swing.JTextField jtxtUsuario;
    // End of variables declaration//GEN-END:variables
}
